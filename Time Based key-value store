# Time Based key-value store : set operation TC->O(1) : get operation TC->(logn) : SC -> O(1)
class TimeMap {
private:
    unordered_map<string, vector<pair<int, string>>> store;
public:
    TimeMap() {}
    
    void set(string key, string value, int timestamp) {
        store[key].emplace_back(timestamp, value);
    }
    
    string get(string key, int timestamp) {
        if(store.find(key) == store.end()){
            return "";
        }

        const vector<pair<int, string>> &entries = store[key];
        int left = 0;
        int right = entries.size() - 1;

        while(left <= right){
            int mid = left + (right - left) / 2;
            if(entries[mid].first <= timestamp){
                left = mid + 1;
            }
            else{
                right = mid - 1;
            }
        }

        return right >= 0 ? entries[right].second : "";
    }
};
