# Climbing stairs - can be solved using recursion which is same as DFS but TC -> O(2 power n) while using DP TC -> O(n)
class Solution {
public:
    int climbStairs(int n) {
        if (n == 1) return 1;
        if (n == 2) return 2;  // Edge case for n=2, added for clarity

        std::vector<int> dp(n + 1);
        dp[1] = 1;
        dp[2] = 2;

        for (int i = 3; i <= n; i++) {
            dp[i] = dp[i-1] + dp[i-2];
        }
        return dp[n];
    }
};

# less acc
class Solution {
public:
    int climbStairs(int n) {
        int one = 1;
        int two = 1;

        for(int i = 0 ; i < n-1; i++){
            int temp = one ;
            one = one + two ;
            two = temp;
        }
    
    return one;
    }
};
