// Letter Combinations of a Phone Number 
class Solution {
private: 
    void backtrack(vector<string>& result, string &current, const string& digits, 
                   int index, const vector<string>& mapping){
        if(index == digits.size()){
            result.push_back(current);
            return;
        }

        string letters = mapping[digits[index] - '0'];
        for(char letter: letters){
            current.push_back(letter);
            backtrack(result, current, digits, index + 1, mapping);
            current.pop_back();
        }
    }
public:
    vector<string> letterCombinations(string digits) {
        if(digits.empty()) return {};

        vector<string> result;
        string current;
        vector<string> mapping = {
            "", "", "abc", "def", "ghi", "jkl", "mno", "pqrs", "tuv", "wxyz"
        };

        backtrack(result, current, digits, 0, mapping);
        return result;
    }
};
