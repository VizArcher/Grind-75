// Valid Parentheses : TC -> O(n) : SC -> O(n)
class Solution {
public:
    bool isValid(string s) {
        int n = s.size();
        stack<char> st;

        for (int i = 0; i < n; i++) {
            if (s[i] == '(' || s[i] == '[' || s[i] == '{') {
                st.push(s[i]);
            } else {
                if (st.empty()) {
                    return false; // There's no corresponding opening bracket
                }
                char topChar = st.top();
                st.pop();
                if ((s[i] == ')' && topChar != '(') ||
                    (s[i] == ']' && topChar != '[') ||
                    (s[i] == '}' && topChar != '{')) {
                    return false; // Mismatched brackets
                }
            }
        }
        return st.empty(); // Check if there are leftover opening brackets
    }
};
