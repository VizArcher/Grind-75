# Flood Fill - This was difficult 
class Solution {
private:
    void dfs(vector<vector<int>>& image, int row, int col, vector<vector<int>>& ans, int color, 
    int inicolor, int delrow[], int delcol[]) {

        ans[row][col] = color ;
        int n = image.size();
        int m = image[0].size();

        for(int i = 0 ; i < 4 ; i++){
            int nrow = row + delrow[i] ;
            int ncol = col + delcol[i] ;

            if(nrow>=0 && nrow<n && ncol>=0 && ncol<m && 
            image[nrow][ncol] == inicolor && ans[nrow][ncol] != color){
                dfs(image, nrow, ncol, ans, color, inicolor, delrow, delcol);
            }
        }
    }
public:
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int color) {
        int inicolor = image[sr][sc] ;
        vector<vector<int>> ans = image ;

        int delrow[] = {-1, 0, +1, 0} ;
        int delcol[] = {0, +1, 0, -1} ;

        dfs(image, sr, sc, ans, color, inicolor, delcol, delrow);
        return ans;
    }
};
